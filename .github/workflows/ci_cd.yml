name: Continuous Integration & Continuous Delivery

on:
  push:
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_EXPERIMENT_NAME: ${{ secrets.MLFLOW_EXPERIMENT_NAME }}

permissions:
  pages: write
  contents: write
  id-token: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Code quality checks
        run: |
          isort --check-only .
          black --check .
          ruff check .

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: pip

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Setup DVC
        uses: iterative/setup-dvc@v1

      - name: Pull DVC
        run: |
          dvc pull data

      - name: Test API
        run: |
          make api-test

      - name: Test Model
        run: |
          make model-test

      - name: Carry out stress-test
        run: |
          make run-server &
          make stress-test

      - name: Upload report artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: reports

  staging:
    name: Staging
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: staging
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
