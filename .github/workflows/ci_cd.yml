name: Continuous Integration & Continuous Delivery

on:
  push:
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}

permissions:
  pages: write
  contents: write
  id-token: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Code quality checks
        run: |
          isort --check-only .
          black --check .
          ruff check .

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: 'pip'

#      - name: Configure GCP credentials
#        uses: 'google-github-actions/auth@v1'
#        with:
#          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
#
#      - name: set up DVC
#        uses: iterative/setup-dvc@v1
#
#      - name: pull DVC
#        run: |
#          dvc pull datasets/test

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Test API
        run: |
          make test-api

      - name: Test Model
        run: |
          make test-model

      - name: Carry out stress-test
        run: |
          make run-server &
          make stress-test

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports

  staging:
    name: Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: staging
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

  github-pages:
    name: GitHub Pages
    runs-on: ubuntu-latest
    needs: test
#    if: github.ref == 'refs/heads/main'

    steps:
    - name: Download a single artifact
      uses: actions/download-artifact@v4
      with:
        name: reports
    - name: Upload to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: reports
